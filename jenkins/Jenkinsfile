pipeline {
    agent {
        kubernetes{
            label 'jenkins-agent1'
        }
    }
    triggers { pollSCM('* * * * *') }
    environment {
		DOCKERHUB_CREDENTIALS=credentials('bf5cd4ea-e9fb-45d3-8f95-9ec6e87c403a')
	}
    stages {

	    stage('gitclone') {
            when {
                branch 'main'
            }
			steps {

			    echo " ============== gitclone =================="
				git 'https://github.com/als-port/dip-net.git'
			}
		}

		stage('Build') {

			steps {
			    echo " ============== Build =================="
			    dir ('app') {
				    sh 'sudo docker build -t alsxs/nginx:app${BUILD_TIMESTAMP} .'
				}
			}
		}

		stage('Login + push') {

			steps {
			    echo " ============== Dockerhub login + push =================="
				sh 'echo $DOCKERHUB_CREDENTIALS_PSW | sudo docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
				sh 'sudo docker tag alsxs/nginx:app${BUILD_TIMESTAMP} alsxs/nginx:app${BUILD_TIMESTAMP}'
				sh 'sudo docker push alsxs/nginx:app${BUILD_TIMESTAMP}'
			}
		}

		stage('Kubernetes') {
            steps {
                echo " ============== Change app-deploy =================="
                withKubeConfig([credentialsId: '80f5cadc-29f3-4359-af11-3dbde86b79bc',
                    serverUrl: 'https://2DB9EDF870B5A976774E63E42F7C004B.sk1.eu-central-1.eks.amazonaws.com',
                    contextName: 'arn:aws:eks:eu-central-1:336639867151:cluster/dip-net-cluster',
                    clusterName: 'dip-net-cluster',
                    namespace: 'default'
                    ]) {
                        sh 'kubectl delete deploy app-dip'
                        sh 'kubectl create deployment app-dip --image=alsxs/nginx:app${BUILD_TIMESTAMP} --port=80'
                        sh 'kubectl scale deployment app-dip --replicas 3'
                }
            }
        }
    }
}


