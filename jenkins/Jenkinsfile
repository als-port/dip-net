pipeline {
    agent {
        kubernetes{
            label 'jenkins-agent1'
        }
    }
    triggers { pollSCM('* * * * *') }
    environment {
		DOCKERHUB_CREDENTIALS=credentials('eaf9a39f-38ec-4de5-b551-8a1a75867295')
	}
    stages {

	    stage('gitclone') {
            when {
                branch 'main'
            }
			steps {

			    echo " ============== gitclone =================="
				git 'https://github.com/als-port/dip-net.git'
			}
		}

		stage('Build') {

			steps {
			    echo " ============== Build =================="
			    dir ('app') {
				    sh 'sudo docker build -t alsxs/nginx:${BUILD_TIMESTAMP} .'
				}
			}
		}

		stage('Login') {

			steps {
			    echo " ============== Dockerhub login =================="
				sh 'echo $DOCKERHUB_CREDENTIALS_PSW | sudo docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
			}
		}

		stage('Kubernetes') {
            steps {
                echo " ============== Change app-deploy =================="
                withKubeConfig([credentialsId: '0f4c638b-d6db-48c1-8019-9e9a51ba0ca3',
                    serverUrl: 'https://6ABC7E386D19709A2E7511AE3EDBC0D9.gr7.eu-central-1.eks.amazonaws.com',
                    contextName: 'arn:aws:eks:eu-central-1:336639867151:cluster/dip-net-cluster',
                    clusterName: 'dip-net-cluster',
                    namespace: 'default'
                    ]) {
                        sh 'kubectl delete deploy app-deployment'
                        sh 'kubectl create deployment app-deployment --image=alsxs/nginx:${BUILD_TIMESTAMP} -l app=app-dip --port=80 && kubectl scale deployment app-deployment --replicas=3'

                }
            }
        }
    }
}

